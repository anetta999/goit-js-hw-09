{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,QAAS,MAwBX,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA/BAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBACJ,MAAMZ,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,GAAWH,EAAII,cAAcC,SAC5CC,EAAgBC,OAAOlB,EAAMmB,OAC7BC,EAAeF,OAAOL,EAAKM,OAC3BE,EAAiBH,OAAOJ,EAAOK,OAErC,GAAIE,GAAkB,GAAKJ,GAAiB,GAAKG,EAAe,EAE9D,YADA1B,EAAAF,GAASG,OAAO2B,QAAQ,+CAuB5B,SAAwBC,EAAcC,EAAaX,GACjD,IAAK,IAAIY,EAAI,EAAGA,GAAKF,EAAcE,GAAK,EAEtC3B,EAAc2B,EADdD,GAAeX,GAEZa,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,MACjBN,EAAAF,GAASG,OAAOgC,QACd,uBAAqB5B,QAAiBC,MAAU,IAGnD4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClBN,EAAAF,GAASG,OAAO2B,QACd,sBAAoBvB,QAAiBC,MAAU,G,EA9BvD6B,CAAeR,EAAgBJ,EAAeG,GAE9CT,EAAII,cAAce,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nNotiflix.Notify.init({\n  timeout: 6000,\n});\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n  const numberedDelay = Number(delay.value);\n  const numberedStep = Number(step.value);\n  const numberedAmount = Number(amount.value);\n\n  if (numberedAmount <= 0 || numberedDelay <= 0 || numberedStep < 0) {\n    Notiflix.Notify.failure('The entered value should be greater then 0');\n    return;\n  }\n\n  createPromises(numberedAmount, numberedDelay, numberedStep);\n\n  evt.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction createPromises(chosenAmount, chosenDelay, step) {\n  for (let i = 0; i <= chosenAmount; i += 1) {\n    chosenDelay += step;\n    createPromise(i, chosenDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\n// createPromise(2, 1500)\n// .then(({ position, delay }) => {\n//   console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n// })\n// .catch(({ position, delay }) => {\n//   console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n// });\n"],"names":["$7Y9D8","parcelRequire","$parcel$interopDefault","Notify","init","timeout","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","evt","preventDefault","step","amount","currentTarget","elements","numberedDelay","Number","value","numberedStep","numberedAmount","failure","chosenAmount","chosenDelay","i","then","success","catch","$47d4ff9957288465$var$createPromises","reset"],"version":3,"file":"03-promises.85e2a01d.js.map"}